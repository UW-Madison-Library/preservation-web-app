=begin
#Preservation Manager Public API

#Public API for the Preservation Manager.

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.32
=end

require 'spec_helper'
require 'json'

# Unit tests for PreservationManager::PreservationManagerApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PreservationManagerApi' do
  before do
    # run before each test
    @instance = PreservationManager::PreservationManagerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PreservationManagerApi' do
    it 'should create an instance of PreservationManagerApi' do
      expect(@instance).to be_instance_of(PreservationManager::PreservationManagerApi)
    end
  end

  # unit tests for approve_ingest_batch
  # Approves a batch for ingestion
  # @param [Hash] opts the optional parameters
  # @option opts [ApproveIngestBatchRequest] :body 
  # @return [nil]
  describe 'approve_ingest_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for approve_ingest_object
  # Approves an object for ingestion
  # @param [Hash] opts the optional parameters
  # @option opts [ApproveIngestObjectRequest] :body 
  # @return [nil]
  describe 'approve_ingest_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_job
  # Cancels a pending job
  # @param [Hash] opts the optional parameters
  # @option opts [CancelJobRequest] :body 
  # @return [nil]
  describe 'cancel_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_org
  # Creates a new organization
  # Service adminstrator access is required to create an organization.
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @option opts [CreateOrgRequest] :body 
  # @return [nil]
  describe 'create_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_vault
  # Creates a new vault for an organization
  # @param [Hash] opts the optional parameters
  # @option opts [CreateVaultRequest] :body 
  # @return [nil]
  describe 'create_vault test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_object
  # Marks the object as deleted in the database, but does not actually delete any files
  # @param [Hash] opts the optional parameters
  # @option opts [DeleteObjectRequest] :body 
  # @return [nil]
  describe 'delete_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_job
  # Gets job details
  # @param job_id The ID of the job
  # @param [Hash] opts the optional parameters
  # @return [DescribeJobResponse]
  describe 'describe_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_org
  # Describes the specified organization and returns the current user&#x27;s permissions
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @return [DescribeOrgResponse]
  describe 'describe_org test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_org_contact
  # Returns the primary contact for the organization.
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @return [OrganizationContactResponse]
  describe 'describe_org_contact test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_preservation_object
  # Retrieves details about an object version
  # @param vault The vault an object is in
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :version The version of an object
  # @return [DescribePreservationObjectResponse]
  describe 'describe_preservation_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_retrieve_request
  # Describes a retrieve objects request
  # @param request_id The ID of the request
  # @param [Hash] opts the optional parameters
  # @return [DescribeRetrieveObjectsResponse]
  describe 'describe_retrieve_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_user
  # Retrieves details about the current user
  # @param [Hash] opts the optional parameters
  # @return [DescribeUserResponse]
  describe 'describe_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for describe_vault
  # Returns details about the vault and the current user&#x27;s permissions in the vault
  # @param vault The name of the vault
  # @param [Hash] opts the optional parameters
  # @return [DescribeVaultResponse]
  describe 'describe_vault test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for diff_batch_object
  # Diffs the batch object against the current state of the object in the preservation system
  # @param ingest_id The ID for the Ingest Batch
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @return [DiffBatchObjectResponse]
  describe 'diff_batch_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_job_types
  # Disables job types from being processed
  # @param [Hash] opts the optional parameters
  # @option opts [DisableJobTypesRequest] :body 
  # @return [nil]
  describe 'disable_job_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_job
  # Downloads the output of a retrieve job
  # @param job_id The ID of the job
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'download_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_job_types
  # Enables job types from being processed
  # @param [Hash] opts the optional parameters
  # @option opts [EnableJobTypesRequest] :body 
  # @return [nil]
  describe 'enable_job_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fail_job
  # Marks an executing job as failed. This action can only be completed by a service administrator, and should only be used when a job has a state of executing but is not being executed by a worker.
  # @param [Hash] opts the optional parameters
  # @option opts [CancelJobRequest] :body 
  # @return [nil]
  describe 'fail_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ingest_event_counts
  # Counts of all ingest events in the system or organization if specified.
  # @param start_date The starting date for the event counts.
  # @param end_date The ending date for the event counts.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<EventType>] :event_type Array of event types.
  # @option opts [Array<EventOutcome>] :event_outcome Array of event outcomes.
  # @option opts [String] :organization_name The ID of the organization.
  # @return [SystemEventCountsResponse]
  describe 'get_ingest_event_counts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_preservation_event_counts
  # Counts of all preservation events in the system or organization if specified.
  # @param start_date The starting date for the event counts.
  # @param end_date The ending date for the event counts.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<EventType>] :event_type Array of event types.
  # @option opts [Array<EventOutcome>] :event_outcome Array of event outcomes.
  # @option opts [String] :organization_name The ID of the organization.
  # @return [SystemEventCountsResponse]
  describe 'get_preservation_event_counts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_system_storage
  # Retrieves system wide storage details, including a list of all organizations in the system and their storage details
  # @param [Hash] opts the optional parameters
  # @return [SystemStorageResponse]
  describe 'get_system_storage test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ingest_bag
  # Ingests the objects in a BagIt bag
  # @param [Hash] opts the optional parameters
  # @option opts [Vault] :vault 
  # @option opts [String] :file 
  # @return [IngestBagResponse]
  describe 'ingest_bag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_executing_jobs
  # Lists jobs that have a state of EXECUTING
  # @param [Hash] opts the optional parameters
  # @return [ListJobsResponse]
  describe 'list_executing_jobs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_jobs
  # Lists jobs
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @return [ListJobsResponse]
  describe 'list_jobs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_org_user_vault_permissions
  # List all of the vaults in an org along with the user&#x27;s permissions
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @option opts [String] :username A user&#x27;s username in the preservation system
  # @return [ListVaultPermissionsResponse]
  describe 'list_org_user_vault_permissions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_org_users
  # Retrieves a list of all of the members of an organization
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @return [ListOrgUsersResponse]
  describe 'list_org_users test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_user_orgs
  # Retrieves a list of all organizations the authenticated user is an active member of
  # @param [Hash] opts the optional parameters
  # @return [ListUserOrgsResponse]
  describe 'list_user_orgs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_users_in_vault
  # Retrieves a list of users with read or write permissions for the given vault
  # @param vault The name of the vault
  # @param [Hash] opts the optional parameters
  # @return [ListVaultUsersResponse]
  describe 'list_users_in_vault test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vault_problems
  # Returns a list of objects within the vault for which storage problems have been identified
  # @param vault The name of the vault
  # @param [Hash] opts the optional parameters
  # @return [ListVaultProblemsResponse]
  describe 'list_vault_problems test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vaults
  # Lists all vaults for an organization
  # @param org_name The ID of the organization
  # @param [Hash] opts the optional parameters
  # @return [ListVaultsResponse]
  describe 'list_vaults test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reject_ingest_batch
  # Rejects a batch for ingestion
  # @param [Hash] opts the optional parameters
  # @option opts [RejectIngestBatchRequest] :body 
  # @return [nil]
  describe 'reject_ingest_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reject_ingest_object
  # Rejects an object for ingestion
  # @param [Hash] opts the optional parameters
  # @option opts [RejectIngestObjectRequest] :body 
  # @return [nil]
  describe 'reject_ingest_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replicate_object
  # Replicates an object from local storage to a remote
  # @param [Hash] opts the optional parameters
  # @option opts [ReplicateObjectRequest] :body 
  # @return [ReplicateObjectResponse]
  describe 'replicate_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for restore_object
  # Restores the local copy of an object from a remote source
  # @param [Hash] opts the optional parameters
  # @option opts [RestorePreservationObjectRequest] :body 
  # @return [RestorePreservationObjectResponse]
  describe 'restore_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch
  # Retrieves Ingest Batch details
  # @param ingest_id The ID for the Ingest Batch
  # @param [Hash] opts the optional parameters
  # @return [RetrieveBatchResponse]
  describe 'retrieve_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch_events
  # Retrieves all of the events associated to the batch. This does not include events associated to objects in the batch
  # @param ingest_id The ID for the Ingest Batch
  # @param [Hash] opts the optional parameters
  # @return [RetrieveEventsResponse]
  describe 'retrieve_batch_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch_object
  # Retrieves details about an Ingest Batch Object
  # @param ingest_id The ID for the Ingest Batch
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @return [RetrieveBatchObjectResponse]
  describe 'retrieve_batch_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch_object_events
  # Retrieves all of the events associated to the object in the batch
  # @param ingest_id The ID for the Ingest Batch
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @return [RetrieveEventsResponse]
  describe 'retrieve_batch_object_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch_object_file
  # Retrieves a specific file associated to an Ingest Batch Object
  # @param ingest_id The ID for the Ingest Batch
  # @param external_object_id The external ID of the object
  # @param file_path The object relative path of the file
  # @param [Hash] opts the optional parameters
  # @return [RetrieveBatchObjectFileResponse]
  describe 'retrieve_batch_object_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch_object_files
  # Retrieves the files associated to an Ingest Batch Object
  # @param ingest_id The ID for the Ingest Batch
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @return [RetrieveBatchObjectFilesResponse]
  describe 'retrieve_batch_object_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_batch_objects
  # Retrieves Ingest Batch Objects
  # @param ingest_id The ID for the Ingest Batch
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size The number of results to include per page (default 20)
  # @option opts [Integer] :page The result page to retrieve, 0 indexed
  # @option opts [String] :has_problems Filter objects by the existence of errors or warnings. WARNINGS returns objects that only have warnings; ERRORS returns any object that has errors.
  # @return [RetrieveBatchObjectsResponse]
  describe 'retrieve_batch_objects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_job_logs
  # Retrieves all of the logs associated with a job
  # @param job_id The ID of the job
  # @param [Hash] opts the optional parameters
  # @return [RetrieveLogsResponse]
  describe 'retrieve_job_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_object_events
  # Retrieves all of the events associated with an object
  # @param vault The vault an object is in
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @return [RetrieveEventsResponse]
  describe 'retrieve_object_events test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_object_storage_problems
  # Retrieves details about what storage problems are affecting an object
  # @param vault The vault an object is in
  # @param external_object_id The external ID of the object
  # @param [Hash] opts the optional parameters
  # @return [RetrieveObjectStorageProblemsResponse]
  describe 'retrieve_object_storage_problems test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_objects
  # Requests the retrieval of preserved objects
  # @param [Hash] opts the optional parameters
  # @option opts [RetrieveObjectsRequest] :body 
  # @return [RetrieveObjectsResponse]
  describe 'retrieve_objects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_batch_ingest
  # Retries a batch ingest if it has failed
  # @param [Hash] opts the optional parameters
  # @option opts [BatchRetryIngestRequest] :body 
  # @return [nil]
  describe 'retry_batch_ingest test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_batch_replicate
  # Retries a batch replicate if it has failed
  # @param [Hash] opts the optional parameters
  # @option opts [BatchRetryReplicateRequest] :body 
  # @return [nil]
  describe 'retry_batch_replicate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_retrieve_job
  # Retries a failed retrieve job
  # @param request_id The ID of the request
  # @param job_id The ID of the job
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'retry_retrieve_job test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_batches
  # Search for batches
  # @param [Hash] opts the optional parameters
  # @option opts [String] :org_name The ID of the organization
  # @option opts [Array<String>] :vault The vault an object is in
  # @option opts [Array<String>] :state The state the batch is in
  # @option opts [Integer] :page_size The number of results to include per page (default 20)
  # @option opts [Integer] :page The result page to retrieve, 0 indexed
  # @return [BatchSearchResponse]
  describe 'search_batches test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_user_vault_permissions
  # Updates a user&#x27;s permissions on a vault. Any existing permissions are overwritten. An empty permission list removes all permissions for the vault.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUserVaultPermissionsRequest] :body 
  # @return [nil]
  describe 'update_user_vault_permissions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_object
  # Validates the local copy of an object
  # @param [Hash] opts the optional parameters
  # @option opts [ValidatePreservationObjectRequest] :body 
  # @return [ValidatePreservationObjectResponse]
  describe 'validate_object test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_object_remote
  # Validates a remote copy of an object
  # @param [Hash] opts the optional parameters
  # @option opts [ValidateObjectRemoteRequest] :body 
  # @return [ValidateObjectRemoteResponse]
  describe 'validate_object_remote test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
